name: CD

on:
  push:
    tags:
      - "v*.*.*"
      - "!v*.*.*-*"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [1.11, 1.12, 1.13, 1.14]
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
        id: go

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup gox
        run: go get github.com/mitchellh/gox

      - name: Go install
        run: go install ./...

      - name: Create binaries
        run: |
          REPO_ROOT=$(git rev-parse --show-toplevel)
          export PATH=$PATH:$(go env GOPATH)/bin
          export VERSION=$(git describe --tags --exact-match 2>/dev/null)
          gox -os="darwin linux windows" -arch="amd64" -output="$REPO_ROOT/bin/{{.Dir}}_{{.OS}}_{{.Arch}}" -ldflags "-X main.version=${VERSION}" ./cmd/radarr

      - name: Upload them as artifacts
        uses: actions/upload-artifact@v1
        with:
          name: binaries
          path: bin

  release:
    name: Github Release
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
        id: go

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get back artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: binaries

      - name: Install git-chglog
        run: go get -u github.com/git-chglog/git-chglog/cmd/git-chglog

      - name: Generate changelog
        run: |
          export VERSION=$(git describe --tags --exact-match 2>/dev/null)
          export PATH=$PATH:$(go env GOPATH)/bin
          git-chglog --output CHANGELOG.md ${VERSION}

      - name: Create a new release
        uses: softprops/action-gh-release@v1
        with:
          files: binaries/radarr*
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build docker image
        uses: docker/build-push-action@v1
        with:
          repository: skynewz/radarr
          tags: latest
          tag_with_ref: true
          add_git_labels: true
          push: true
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
